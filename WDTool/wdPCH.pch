//
//  wdPCH.pch
//  BattleHeartNew
//
//  Created by Mac on 2020/12/7.
//  Copyright © 2020 Macdddd. All rights reserved.
//

#ifndef wdPCH_pch
#define wdPCH_pch



#import <SpriteKit/SpriteKit.h>
#import "WDTextureManager.h"
#import "WDSkillManager.h"
#import "WDCalculateTool.h"
#import "WDActionTool.h"
#import "WDNumberManager.h"
#import <UIViewExt/UIViewExt.h>


///玩家
#define kSkillType @"kSkillType"

//骑士
#define kKinght @"Knight"


//冰霜巫师
#define kIceWizard @"IceWizard"


//弓箭手
#define kArcher @"Archer"
#define kArcher_skill_1 @"Archer_skill_1" //射手第1个技能，增加攻速时间
#define kArcher_skill_2 @"Archer_skill_2" //射手第2个技能，三连发
#define kArcher_skill_3 @"Archer_skill_3" //射手第3个技能，增加移动速度
#define kArcher_skill_4 @"Archer_skill_4" //射手第4个技能，攻击增加吸血
#define kArcher_skill_5 @"Archer_skill_5" //射手第5个技能，待定

// 忍者
#define kNinja @"Ninja"
#define kNinja_skill_1 @"Ninja_skill_1" //忍者第1个技能，斩杀

//石头人
#define kStone @"Stone"


///敌人
//红色蝙蝠
#define kRedBat @"RedBat"
/// 第一关BOSS
#define kBoss1 @"kBoss1"

//骷髅兵
#define kBoneSolider @"BoneSolider"


//玩家流程
#define kPassLearn1 @"kPassLearn1" //教学1
#define kPassLearn2 @"kPassLearn2" //教学2
#define kPassLearn3 @"kPassLearn3" //教学3
#define kSkillNPC @"kSkillNPC"     //解救了负责学习技能的NPC
#define kNinjaFirst @"kNinjaFirst" //第一次会面忍者


/// 第一关
#define kPassCheckPoint1 @"kPassCheckPoint1"
/// 第二关
#define kPassCheckPoint2 @"kPassCheckPoint2"



#define kSkillBall @"kSkillBall" // 学习技能的球

//NSLog
#ifndef __OPTIMIZE__
#define NSLog(...) NSLog(@"%s 第%d行 \n %@\n\n",__func__,__LINE__,[NSString stringWithFormat:__VA_ARGS__])
#else
#define NSLog(...) {}
#endif


// RGB颜色转换（16进制->10进制）
#define UICOLOR_HEX(hexString) [UIColor colorWithRed:((float)((hexString & 0xFF0000) >> 16))/255.0 green:((float)((hexString & 0xFF00) >> 8))/255.0 blue:((float)(hexString & 0xFF))/255.0 alpha:1.0]
// 带有RGBA的颜色设置
#define UICOLOR_RGB(R, G, B, A) [UIColor colorWithRed:R/255.0 green:G/255.0 blue:B/255.0 alpha:A]
// 随机颜色
#define UICOLOR_RANDOM [UIColor colorWithRed:(arc4random()%255)/255.0 green:(arc4random()%255)/255.0 blue:(arc4random()%255)/255.0 alpha:1.0]



#pragma mark 物理运算类别掩码
//body.categoryBitMask = 0;  <类别掩码，为0时代表我谁也碰撞不了>
//body.contactTestBitMask = 0; <碰撞检测掩码，为0时代表不触发检测>
//body.collisionBitMask = 0;  <允许碰撞掩码，为0时代表谁也碰撞不了我>
//想要发生碰撞，需要 categoryBitMask & collisionBitMask 运算，为非0，可以发生碰撞



static const uint32_t PLAYER_CATEGORY  = 0x01;  //0001
static const uint32_t PLAYER_COLLISION = 0x02;  //0010
static const uint32_t PLAYER_CONTACT   = 0x15;  //1111

static const uint32_t LINE_CATEGORY  = 0x00;  //0000
static const uint32_t LINE_COLLISION = 0x00;  //0000
static const uint32_t LINE_CONTACT   = 0x00;  //0000


static const uint32_t MONSTER_CATEGORY  = 0x04;  //0100
static const uint32_t MONSTER_COLLISION = 0x08;  //1000
static const uint32_t MONSTER_CONTACT   = 0x04;  //0100



static const uint32_t ARROW_CATEGORY = 0X04;     //0100


#pragma mark 常用动画方法
#define REMOVE_ACTION [SKAction removeFromParent]



#define kScreenWidth [UIScreen mainScreen].bounds.size.width
#define kScreenHeight [UIScreen mainScreen].bounds.size.height

#define IS_IPHONEX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? (CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(1080, 2340), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(1170, 2532), [[UIScreen mainScreen] currentMode].size)||CGSizeEqualToSize(CGSizeMake(1284, 2778), [[UIScreen mainScreen] currentMode].size)) : NO)



//通知
/// 移动结束
#define kNotificationForMoveFinish @"kNotificationForMoveFinish"
/// 死亡通知
#define kNotificationForDied @"kNotificationForDied"
/// 换人通知
#define kNotificationForChangeUser @"kNotificationForChangeUser"
/// 基本只有教学关卡有用
#define kNotificationForSkillCanUse @"kNotificationForSkillCanUse"
/// 介绍技能通知
#define kNotificationForShowSkill @"kNotificationForShowSkill"
/// 隐藏或显示技能栏
#define kNotificationForHiddenSkill @"kNotificationForHiddenSkill"
/// ball学习技能，刷新界面
#define kNotificationForLearnSkill @"kNotificationForLearnSkill"
/// 点击指示图标
#define kNotificationForClickPrompt @"kNotificationForClickPrompt"

/// 全局link
#define kNotificationForDisplayLink @"kNotificationForDisplayLink"

//召唤小怪的通知(boss1)
#define kNotificationForCallMonster1 @"kNotificationForCallMonster1"

/// 忍者首次出现的关卡通知
#define kNotificationForCallNinja @"kNotificationForCallNinja"

#endif /* wdPCH_pch */
